### EXAMPLE CONFIGURATION ###

# Needed to use Apache HTTPD's Tomcat connector
tomcat-protocol = AJP/1.3
tomcat-port = 9000
# ! important !
# Lock down server to localhost if the http_headers method of authentication is
# used, since this method trusts without question the information provided in
# request headers.
tomcat-bind-address = localhost

###########################################################################
# *HTTP_HEADERS BASED AUTHENTICATION EXAMPLE - USED WITH APACHE MOD_SHIB* #
###########################################################################
authentication-method = http_headers
# Required LDAP settings
ldap-provider-url = ldaps://some.ldap.server/
ldap-search-base-dn = cn=users,dc=example,dc=com,dc=au
ldap-search-subtree = true
ldap-search-filter = mail=%s
# Optional LDAP settings - no auth if omitted
ldap-security-principal = cn=someone,cn=users,dc=example,dc=com,dc=au
ldap-security-password = astrongpassword

# Refuse to generate certificates for these users
user-blacklist = root,ubuntu

###########################################################################
# The user name of the authenticating user is sent via headers from an    #
# upstream provider (e.g. Apache). What is the name of the header?        #
# default: mail                                                           #
###########################################################################
upstream-auth-header-name = mail

###########################################################################
#             *OPENID CONNECT BASED AUTHENTICATION EXAMPLE*               #
###########################################################################
#authentication-method = oidc
#oidc-issuer = http://127.0.0.1:5556/dex
#oidc-client-id = example-app
#oidc-client-secret = example-secret
#oidc-redirect-uri = http://127.0.0.1/openid_connect_login
#oidc-auth-method = client_secret_basic
#oidc-scopes = openid,profile,email,offline_access


###########################################################################
# Optional JWT token settings - key pair generated if omitted             #
# Generate using OpenSSL (e.g. openssl genrsa -des3 -out server.key 4096) #
# Passphrase required if private key is encrypted                         #
###########################################################################
token-signing-rsa-key-pair = /opt/ssh-authz-server/server.key
#token-signing-rsa-private-key-passphrase = test123

###########################################################################
# Required SSH key signing certificate authority settings                 #
# Generate using ssh-keygen (e.g. ssh-keygen -b 4096 -f server_ca)        #
# Passphrase required if private key is encrypted                         #
###########################################################################
ssh-ca-public-key = /opt/ssh-authz-server/server_ca.pub
ssh-ca-private-key = /opt/ssh-authz-server/server_ca
#ssh-ca-private-key-passphrase = test123
ssh-cert-max-valid-days = 7

registered-clients-file = /opt/ssh-authz-server/clients.xml

# LDAP search results are cached here
cache-file = /some/cache/location/ssh-authz-cache.db
cache-expiry-hours = 24
